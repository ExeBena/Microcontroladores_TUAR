ARM GAS  /tmp/ccqmkRHu.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB67:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/ccqmkRHu.s 			page 2


  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE BEGIN PV */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/main.c **** void SystemClock_Config(void);
  49:Core/Src/main.c **** static void MX_GPIO_Init(void);
  50:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  55:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END 0 */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /**
  60:Core/Src/main.c ****   * @brief  The application entry point.
  61:Core/Src/main.c ****   * @retval int
  62:Core/Src/main.c ****   */
  63:Core/Src/main.c **** int main(void)
  64:Core/Src/main.c **** {
  65:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c ****   /* USER CODE END 1 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  72:Core/Src/main.c ****   HAL_Init();
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE END Init */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* Configure the system clock */
  79:Core/Src/main.c ****   SystemClock_Config();
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END SysInit */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Initialize all configured peripherals */
  86:Core/Src/main.c ****   MX_GPIO_Init();
  87:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END 2 */
  90:Core/Src/main.c **** 
ARM GAS  /tmp/ccqmkRHu.s 			page 3


  91:Core/Src/main.c ****   /* Infinite loop */
  92:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  93:Core/Src/main.c ****   while (1)
  94:Core/Src/main.c ****   {
  95:Core/Src/main.c ****     /* USER CODE END WHILE */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****     if(HAL_GPIO_ReadPin(GPIOB,GPIO_PIN_0)==0)
  98:Core/Src/main.c ****     {
  99:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,0);
 100:Core/Src/main.c ****     }
 101:Core/Src/main.c ****     else{
 102:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,1);
 103:Core/Src/main.c ****     }
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 107:Core/Src/main.c ****   }
 108:Core/Src/main.c ****   /* USER CODE END 3 */
 109:Core/Src/main.c **** }
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /**
 112:Core/Src/main.c ****   * @brief System Clock Configuration
 113:Core/Src/main.c ****   * @retval None
 114:Core/Src/main.c ****   */
 115:Core/Src/main.c **** void SystemClock_Config(void)
 116:Core/Src/main.c **** {
 117:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 118:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 121:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 122:Core/Src/main.c ****   */
 123:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 130:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 131:Core/Src/main.c ****   {
 132:Core/Src/main.c ****     Error_Handler();
 133:Core/Src/main.c ****   }
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 136:Core/Src/main.c ****   */
 137:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 138:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 139:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 140:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 145:Core/Src/main.c ****   {
 146:Core/Src/main.c ****     Error_Handler();
 147:Core/Src/main.c ****   }
ARM GAS  /tmp/ccqmkRHu.s 			page 4


 148:Core/Src/main.c **** }
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** /**
 151:Core/Src/main.c ****   * @brief GPIO Initialization Function
 152:Core/Src/main.c ****   * @param None
 153:Core/Src/main.c ****   * @retval None
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c **** static void MX_GPIO_Init(void)
 156:Core/Src/main.c **** {
  26              		.loc 1 156 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  37 0002 88B0     		sub	sp, sp, #32
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 157:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 157 3 view .LVU1
  41              		.loc 1 157 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0494     		str	r4, [sp, #16]
  44 0008 0594     		str	r4, [sp, #20]
  45 000a 0694     		str	r4, [sp, #24]
  46 000c 0794     		str	r4, [sp, #28]
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 160:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 160 3 is_stmt 1 view .LVU3
  48              	.LBB4:
  49              		.loc 1 160 3 view .LVU4
  50              		.loc 1 160 3 view .LVU5
  51 000e 1C4B     		ldr	r3, .L3
  52 0010 9A69     		ldr	r2, [r3, #24]
  53 0012 42F01002 		orr	r2, r2, #16
  54 0016 9A61     		str	r2, [r3, #24]
  55              		.loc 1 160 3 view .LVU6
  56 0018 9A69     		ldr	r2, [r3, #24]
  57 001a 02F01002 		and	r2, r2, #16
  58 001e 0192     		str	r2, [sp, #4]
  59              		.loc 1 160 3 view .LVU7
  60 0020 019A     		ldr	r2, [sp, #4]
  61              	.LBE4:
  62              		.loc 1 160 3 view .LVU8
 161:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  63              		.loc 1 161 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 161 3 view .LVU10
  66              		.loc 1 161 3 view .LVU11
  67 0022 9A69     		ldr	r2, [r3, #24]
  68 0024 42F02002 		orr	r2, r2, #32
ARM GAS  /tmp/ccqmkRHu.s 			page 5


  69 0028 9A61     		str	r2, [r3, #24]
  70              		.loc 1 161 3 view .LVU12
  71 002a 9A69     		ldr	r2, [r3, #24]
  72 002c 02F02002 		and	r2, r2, #32
  73 0030 0292     		str	r2, [sp, #8]
  74              		.loc 1 161 3 view .LVU13
  75 0032 029A     		ldr	r2, [sp, #8]
  76              	.LBE5:
  77              		.loc 1 161 3 view .LVU14
 162:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  78              		.loc 1 162 3 view .LVU15
  79              	.LBB6:
  80              		.loc 1 162 3 view .LVU16
  81              		.loc 1 162 3 view .LVU17
  82 0034 9A69     		ldr	r2, [r3, #24]
  83 0036 42F00802 		orr	r2, r2, #8
  84 003a 9A61     		str	r2, [r3, #24]
  85              		.loc 1 162 3 view .LVU18
  86 003c 9B69     		ldr	r3, [r3, #24]
  87 003e 03F00803 		and	r3, r3, #8
  88 0042 0393     		str	r3, [sp, #12]
  89              		.loc 1 162 3 view .LVU19
  90 0044 039B     		ldr	r3, [sp, #12]
  91              	.LBE6:
  92              		.loc 1 162 3 view .LVU20
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 165:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  93              		.loc 1 165 3 view .LVU21
  94 0046 0F4E     		ldr	r6, .L3+4
  95 0048 2246     		mov	r2, r4
  96 004a 4FF40051 		mov	r1, #8192
  97 004e 3046     		mov	r0, r6
  98 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  99              	.LVL0:
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 168:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 100              		.loc 1 168 3 view .LVU22
 101              		.loc 1 168 23 is_stmt 0 view .LVU23
 102 0054 4FF40053 		mov	r3, #8192
 103 0058 0493     		str	r3, [sp, #16]
 169:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 104              		.loc 1 169 3 is_stmt 1 view .LVU24
 105              		.loc 1 169 24 is_stmt 0 view .LVU25
 106 005a 0125     		movs	r5, #1
 107 005c 0595     		str	r5, [sp, #20]
 170:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 108              		.loc 1 170 3 is_stmt 1 view .LVU26
 109              		.loc 1 170 24 is_stmt 0 view .LVU27
 110 005e 0694     		str	r4, [sp, #24]
 171:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 111              		.loc 1 171 3 is_stmt 1 view .LVU28
 112              		.loc 1 171 25 is_stmt 0 view .LVU29
 113 0060 0223     		movs	r3, #2
 114 0062 0793     		str	r3, [sp, #28]
 172:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
ARM GAS  /tmp/ccqmkRHu.s 			page 6


 115              		.loc 1 172 3 is_stmt 1 view .LVU30
 116 0064 04A9     		add	r1, sp, #16
 117 0066 3046     		mov	r0, r6
 118 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 119              	.LVL1:
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /*Configure GPIO pin : PB0 */
 175:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
 120              		.loc 1 175 3 view .LVU31
 121              		.loc 1 175 23 is_stmt 0 view .LVU32
 122 006c 0495     		str	r5, [sp, #16]
 176:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 123              		.loc 1 176 3 is_stmt 1 view .LVU33
 124              		.loc 1 176 24 is_stmt 0 view .LVU34
 125 006e 0594     		str	r4, [sp, #20]
 177:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 126              		.loc 1 177 3 is_stmt 1 view .LVU35
 127              		.loc 1 177 24 is_stmt 0 view .LVU36
 128 0070 0695     		str	r5, [sp, #24]
 178:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 129              		.loc 1 178 3 is_stmt 1 view .LVU37
 130 0072 04A9     		add	r1, sp, #16
 131 0074 0448     		ldr	r0, .L3+8
 132 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 133              	.LVL2:
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** }
 134              		.loc 1 180 1 is_stmt 0 view .LVU38
 135 007a 08B0     		add	sp, sp, #32
 136              	.LCFI2:
 137              		.cfi_def_cfa_offset 16
 138              		@ sp needed
 139 007c 70BD     		pop	{r4, r5, r6, pc}
 140              	.L4:
 141 007e 00BF     		.align	2
 142              	.L3:
 143 0080 00100240 		.word	1073876992
 144 0084 00100140 		.word	1073811456
 145 0088 000C0140 		.word	1073810432
 146              		.cfi_endproc
 147              	.LFE67:
 149              		.section	.text.Error_Handler,"ax",%progbits
 150              		.align	1
 151              		.global	Error_Handler
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 155              		.fpu softvfp
 157              	Error_Handler:
 158              	.LFB68:
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /* USER CODE END 4 */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** /**
 187:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
ARM GAS  /tmp/ccqmkRHu.s 			page 7


 188:Core/Src/main.c ****   * @retval None
 189:Core/Src/main.c ****   */
 190:Core/Src/main.c **** void Error_Handler(void)
 191:Core/Src/main.c **** {
 159              		.loc 1 191 1 is_stmt 1 view -0
 160              		.cfi_startproc
 161              		@ Volatile: function does not return.
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 192:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 193:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 194:Core/Src/main.c ****   __disable_irq();
 165              		.loc 1 194 3 view .LVU40
 166              	.LBB7:
 167              	.LBI7:
 168              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
ARM GAS  /tmp/ccqmkRHu.s 			page 8


  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/ccqmkRHu.s 			page 9


  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 169              		.loc 2 140 27 view .LVU41
 170              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 171              		.loc 2 142 3 view .LVU42
 172              		.syntax unified
 173              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 174 0000 72B6     		cpsid i
 175              	@ 0 "" 2
 176              		.thumb
 177              		.syntax unified
 178              	.L6:
 179              	.LBE8:
 180              	.LBE7:
ARM GAS  /tmp/ccqmkRHu.s 			page 10


 195:Core/Src/main.c ****   while (1)
 181              		.loc 1 195 3 discriminator 1 view .LVU43
 196:Core/Src/main.c ****   {
 197:Core/Src/main.c ****   }
 182              		.loc 1 197 3 discriminator 1 view .LVU44
 195:Core/Src/main.c ****   while (1)
 183              		.loc 1 195 9 discriminator 1 view .LVU45
 184 0002 FEE7     		b	.L6
 185              		.cfi_endproc
 186              	.LFE68:
 188              		.section	.text.SystemClock_Config,"ax",%progbits
 189              		.align	1
 190              		.global	SystemClock_Config
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu softvfp
 196              	SystemClock_Config:
 197              	.LFB66:
 116:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 198              		.loc 1 116 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 64
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202 0000 00B5     		push	{lr}
 203              	.LCFI3:
 204              		.cfi_def_cfa_offset 4
 205              		.cfi_offset 14, -4
 206 0002 91B0     		sub	sp, sp, #68
 207              	.LCFI4:
 208              		.cfi_def_cfa_offset 72
 117:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 209              		.loc 1 117 3 view .LVU47
 117:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 210              		.loc 1 117 22 is_stmt 0 view .LVU48
 211 0004 2822     		movs	r2, #40
 212 0006 0021     		movs	r1, #0
 213 0008 06A8     		add	r0, sp, #24
 214 000a FFF7FEFF 		bl	memset
 215              	.LVL3:
 118:Core/Src/main.c **** 
 216              		.loc 1 118 3 is_stmt 1 view .LVU49
 118:Core/Src/main.c **** 
 217              		.loc 1 118 22 is_stmt 0 view .LVU50
 218 000e 0023     		movs	r3, #0
 219 0010 0193     		str	r3, [sp, #4]
 220 0012 0293     		str	r3, [sp, #8]
 221 0014 0393     		str	r3, [sp, #12]
 222 0016 0493     		str	r3, [sp, #16]
 223 0018 0593     		str	r3, [sp, #20]
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 224              		.loc 1 123 3 is_stmt 1 view .LVU51
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 225              		.loc 1 123 36 is_stmt 0 view .LVU52
 226 001a 0122     		movs	r2, #1
 227 001c 0692     		str	r2, [sp, #24]
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
ARM GAS  /tmp/ccqmkRHu.s 			page 11


 228              		.loc 1 124 3 is_stmt 1 view .LVU53
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 229              		.loc 1 124 30 is_stmt 0 view .LVU54
 230 001e 4FF48033 		mov	r3, #65536
 231 0022 0793     		str	r3, [sp, #28]
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 232              		.loc 1 125 3 is_stmt 1 view .LVU55
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 233              		.loc 1 126 3 view .LVU56
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 234              		.loc 1 126 30 is_stmt 0 view .LVU57
 235 0024 0A92     		str	r2, [sp, #40]
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 236              		.loc 1 127 3 is_stmt 1 view .LVU58
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 237              		.loc 1 127 34 is_stmt 0 view .LVU59
 238 0026 0222     		movs	r2, #2
 239 0028 0D92     		str	r2, [sp, #52]
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 240              		.loc 1 128 3 is_stmt 1 view .LVU60
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 241              		.loc 1 128 35 is_stmt 0 view .LVU61
 242 002a 0E93     		str	r3, [sp, #56]
 129:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 243              		.loc 1 129 3 is_stmt 1 view .LVU62
 129:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 244              		.loc 1 129 32 is_stmt 0 view .LVU63
 245 002c 4FF4E013 		mov	r3, #1835008
 246 0030 0F93     		str	r3, [sp, #60]
 130:Core/Src/main.c ****   {
 247              		.loc 1 130 3 is_stmt 1 view .LVU64
 130:Core/Src/main.c ****   {
 248              		.loc 1 130 7 is_stmt 0 view .LVU65
 249 0032 06A8     		add	r0, sp, #24
 250 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 251              	.LVL4:
 130:Core/Src/main.c ****   {
 252              		.loc 1 130 6 view .LVU66
 253 0038 80B9     		cbnz	r0, .L11
 137:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 254              		.loc 1 137 3 is_stmt 1 view .LVU67
 137:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 255              		.loc 1 137 31 is_stmt 0 view .LVU68
 256 003a 0F23     		movs	r3, #15
 257 003c 0193     		str	r3, [sp, #4]
 139:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 258              		.loc 1 139 3 is_stmt 1 view .LVU69
 139:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 259              		.loc 1 139 34 is_stmt 0 view .LVU70
 260 003e 0221     		movs	r1, #2
 261 0040 0291     		str	r1, [sp, #8]
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 262              		.loc 1 140 3 is_stmt 1 view .LVU71
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 263              		.loc 1 140 35 is_stmt 0 view .LVU72
 264 0042 0023     		movs	r3, #0
 265 0044 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/ccqmkRHu.s 			page 12


 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 266              		.loc 1 141 3 is_stmt 1 view .LVU73
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 267              		.loc 1 141 36 is_stmt 0 view .LVU74
 268 0046 4FF48062 		mov	r2, #1024
 269 004a 0492     		str	r2, [sp, #16]
 142:Core/Src/main.c **** 
 270              		.loc 1 142 3 is_stmt 1 view .LVU75
 142:Core/Src/main.c **** 
 271              		.loc 1 142 36 is_stmt 0 view .LVU76
 272 004c 0593     		str	r3, [sp, #20]
 144:Core/Src/main.c ****   {
 273              		.loc 1 144 3 is_stmt 1 view .LVU77
 144:Core/Src/main.c ****   {
 274              		.loc 1 144 7 is_stmt 0 view .LVU78
 275 004e 01A8     		add	r0, sp, #4
 276 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 277              	.LVL5:
 144:Core/Src/main.c ****   {
 278              		.loc 1 144 6 view .LVU79
 279 0054 20B9     		cbnz	r0, .L12
 148:Core/Src/main.c **** 
 280              		.loc 1 148 1 view .LVU80
 281 0056 11B0     		add	sp, sp, #68
 282              	.LCFI5:
 283              		.cfi_remember_state
 284              		.cfi_def_cfa_offset 4
 285              		@ sp needed
 286 0058 5DF804FB 		ldr	pc, [sp], #4
 287              	.L11:
 288              	.LCFI6:
 289              		.cfi_restore_state
 132:Core/Src/main.c ****   }
 290              		.loc 1 132 5 is_stmt 1 view .LVU81
 291 005c FFF7FEFF 		bl	Error_Handler
 292              	.LVL6:
 293              	.L12:
 146:Core/Src/main.c ****   }
 294              		.loc 1 146 5 view .LVU82
 295 0060 FFF7FEFF 		bl	Error_Handler
 296              	.LVL7:
 297              		.cfi_endproc
 298              	.LFE66:
 300              		.section	.text.main,"ax",%progbits
 301              		.align	1
 302              		.global	main
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu softvfp
 308              	main:
 309              	.LFB65:
  64:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 310              		.loc 1 64 1 view -0
 311              		.cfi_startproc
 312              		@ Volatile: function does not return.
 313              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccqmkRHu.s 			page 13


 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315 0000 08B5     		push	{r3, lr}
 316              	.LCFI7:
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 3, -8
 319              		.cfi_offset 14, -4
  72:Core/Src/main.c **** 
 320              		.loc 1 72 3 view .LVU84
 321 0002 FFF7FEFF 		bl	HAL_Init
 322              	.LVL8:
  79:Core/Src/main.c **** 
 323              		.loc 1 79 3 view .LVU85
 324 0006 FFF7FEFF 		bl	SystemClock_Config
 325              	.LVL9:
  86:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 326              		.loc 1 86 3 view .LVU86
 327 000a FFF7FEFF 		bl	MX_GPIO_Init
 328              	.LVL10:
 329 000e 08E0     		b	.L14
 330              	.L18:
  99:Core/Src/main.c ****     }
 331              		.loc 1 99 7 view .LVU87
 332 0010 0022     		movs	r2, #0
 333 0012 4FF40051 		mov	r1, #8192
 334 0016 00F18040 		add	r0, r0, #1073741824
 335 001a 00F58830 		add	r0, r0, #69632
 336 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 337              	.LVL11:
 338              	.L14:
  93:Core/Src/main.c ****   {
 339              		.loc 1 93 3 view .LVU88
  97:Core/Src/main.c ****     {
 340              		.loc 1 97 5 view .LVU89
  97:Core/Src/main.c ****     {
 341              		.loc 1 97 8 is_stmt 0 view .LVU90
 342 0022 0121     		movs	r1, #1
 343 0024 0548     		ldr	r0, .L19
 344 0026 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 345              	.LVL12:
  97:Core/Src/main.c ****     {
 346              		.loc 1 97 7 view .LVU91
 347 002a 0028     		cmp	r0, #0
 348 002c F0D0     		beq	.L18
 102:Core/Src/main.c ****     }
 349              		.loc 1 102 7 is_stmt 1 view .LVU92
 350 002e 0122     		movs	r2, #1
 351 0030 4FF40051 		mov	r1, #8192
 352 0034 0248     		ldr	r0, .L19+4
 353 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 354              	.LVL13:
 355 003a F2E7     		b	.L14
 356              	.L20:
 357              		.align	2
 358              	.L19:
 359 003c 000C0140 		.word	1073810432
 360 0040 00100140 		.word	1073811456
 361              		.cfi_endproc
ARM GAS  /tmp/ccqmkRHu.s 			page 14


 362              	.LFE65:
 364              		.text
 365              	.Letext0:
 366              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 367              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 368              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 369              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 370              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 371              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 372              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 373              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 374              		.file 11 "<built-in>"
ARM GAS  /tmp/ccqmkRHu.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccqmkRHu.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccqmkRHu.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccqmkRHu.s:143    .text.MX_GPIO_Init:0000000000000080 $d
     /tmp/ccqmkRHu.s:150    .text.Error_Handler:0000000000000000 $t
     /tmp/ccqmkRHu.s:157    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccqmkRHu.s:189    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccqmkRHu.s:196    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccqmkRHu.s:301    .text.main:0000000000000000 $t
     /tmp/ccqmkRHu.s:308    .text.main:0000000000000000 main
     /tmp/ccqmkRHu.s:359    .text.main:000000000000003c $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_ReadPin
