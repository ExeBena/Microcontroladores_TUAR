ARM GAS  /tmp/cc0AxhNB.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB67:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/cc0AxhNB.s 			page 2


  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE BEGIN PV */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/main.c **** void SystemClock_Config(void);
  49:Core/Src/main.c **** static void MX_GPIO_Init(void);
  50:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  55:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END 0 */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /**
  60:Core/Src/main.c ****   * @brief  The application entry point.
  61:Core/Src/main.c ****   * @retval int
  62:Core/Src/main.c ****   */
  63:Core/Src/main.c **** int main(void)
  64:Core/Src/main.c **** {
  65:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c ****   /* USER CODE END 1 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  72:Core/Src/main.c ****   HAL_Init();
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE END Init */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* Configure the system clock */
  79:Core/Src/main.c ****   SystemClock_Config();
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END SysInit */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Initialize all configured peripherals */
  86:Core/Src/main.c ****   MX_GPIO_Init();
  87:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END 2 */
  90:Core/Src/main.c **** 
ARM GAS  /tmp/cc0AxhNB.s 			page 3


  91:Core/Src/main.c ****   /* Infinite loop */
  92:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  93:Core/Src/main.c ****   while (1)
  94:Core/Src/main.c ****   {
  95:Core/Src/main.c ****     /* USER CODE END WHILE */
  96:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
  99:Core/Src/main.c ****     HAL_Delay(500);
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   }
 104:Core/Src/main.c ****   /* USER CODE END 3 */
 105:Core/Src/main.c **** }
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** /**
 108:Core/Src/main.c ****   * @brief System Clock Configuration
 109:Core/Src/main.c ****   * @retval None
 110:Core/Src/main.c ****   */
 111:Core/Src/main.c **** void SystemClock_Config(void)
 112:Core/Src/main.c **** {
 113:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 114:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 117:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 118:Core/Src/main.c ****   */
 119:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 120:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 121:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 123:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 126:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 127:Core/Src/main.c ****   {
 128:Core/Src/main.c ****     Error_Handler();
 129:Core/Src/main.c ****   }
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 134:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 135:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 136:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 137:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 138:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 141:Core/Src/main.c ****   {
 142:Core/Src/main.c ****     Error_Handler();
 143:Core/Src/main.c ****   }
 144:Core/Src/main.c **** }
 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** /**
 147:Core/Src/main.c ****   * @brief GPIO Initialization Function
ARM GAS  /tmp/cc0AxhNB.s 			page 4


 148:Core/Src/main.c ****   * @param None
 149:Core/Src/main.c ****   * @retval None
 150:Core/Src/main.c ****   */
 151:Core/Src/main.c **** static void MX_GPIO_Init(void)
 152:Core/Src/main.c **** {
  26              		.loc 1 152 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 87B0     		sub	sp, sp, #28
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
 153:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 153 3 view .LVU1
  40              		.loc 1 153 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0294     		str	r4, [sp, #8]
  43 0008 0394     		str	r4, [sp, #12]
  44 000a 0494     		str	r4, [sp, #16]
  45 000c 0594     		str	r4, [sp, #20]
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 156:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  46              		.loc 1 156 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 156 3 view .LVU4
  49              		.loc 1 156 3 view .LVU5
  50 000e 144B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F01002 		orr	r2, r2, #16
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 156 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
  56 001a 02F01002 		and	r2, r2, #16
  57 001e 0092     		str	r2, [sp]
  58              		.loc 1 156 3 view .LVU7
  59 0020 009A     		ldr	r2, [sp]
  60              	.LBE4:
  61              		.loc 1 156 3 view .LVU8
 157:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  62              		.loc 1 157 3 view .LVU9
  63              	.LBB5:
  64              		.loc 1 157 3 view .LVU10
  65              		.loc 1 157 3 view .LVU11
  66 0022 9A69     		ldr	r2, [r3, #24]
  67 0024 42F02002 		orr	r2, r2, #32
  68 0028 9A61     		str	r2, [r3, #24]
  69              		.loc 1 157 3 view .LVU12
  70 002a 9B69     		ldr	r3, [r3, #24]
  71 002c 03F02003 		and	r3, r3, #32
  72 0030 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cc0AxhNB.s 			page 5


  73              		.loc 1 157 3 view .LVU13
  74 0032 019B     		ldr	r3, [sp, #4]
  75              	.LBE5:
  76              		.loc 1 157 3 view .LVU14
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 160:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  77              		.loc 1 160 3 view .LVU15
  78 0034 0B4D     		ldr	r5, .L3+4
  79 0036 2246     		mov	r2, r4
  80 0038 4FF40051 		mov	r1, #8192
  81 003c 2846     		mov	r0, r5
  82 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
  83              	.LVL0:
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 163:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
  84              		.loc 1 163 3 view .LVU16
  85              		.loc 1 163 23 is_stmt 0 view .LVU17
  86 0042 4FF40053 		mov	r3, #8192
  87 0046 0293     		str	r3, [sp, #8]
 164:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  88              		.loc 1 164 3 is_stmt 1 view .LVU18
  89              		.loc 1 164 24 is_stmt 0 view .LVU19
  90 0048 0123     		movs	r3, #1
  91 004a 0393     		str	r3, [sp, #12]
 165:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  92              		.loc 1 165 3 is_stmt 1 view .LVU20
  93              		.loc 1 165 24 is_stmt 0 view .LVU21
  94 004c 0494     		str	r4, [sp, #16]
 166:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  95              		.loc 1 166 3 is_stmt 1 view .LVU22
  96              		.loc 1 166 25 is_stmt 0 view .LVU23
  97 004e 0223     		movs	r3, #2
  98 0050 0593     		str	r3, [sp, #20]
 167:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
  99              		.loc 1 167 3 is_stmt 1 view .LVU24
 100 0052 02A9     		add	r1, sp, #8
 101 0054 2846     		mov	r0, r5
 102 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 103              	.LVL1:
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** }
 104              		.loc 1 169 1 is_stmt 0 view .LVU25
 105 005a 07B0     		add	sp, sp, #28
 106              	.LCFI2:
 107              		.cfi_def_cfa_offset 12
 108              		@ sp needed
 109 005c 30BD     		pop	{r4, r5, pc}
 110              	.L4:
 111 005e 00BF     		.align	2
 112              	.L3:
 113 0060 00100240 		.word	1073876992
 114 0064 00100140 		.word	1073811456
 115              		.cfi_endproc
 116              	.LFE67:
 118              		.section	.text.Error_Handler,"ax",%progbits
ARM GAS  /tmp/cc0AxhNB.s 			page 6


 119              		.align	1
 120              		.global	Error_Handler
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu softvfp
 126              	Error_Handler:
 127              	.LFB68:
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /* USER CODE END 4 */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** /**
 176:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 177:Core/Src/main.c ****   * @retval None
 178:Core/Src/main.c ****   */
 179:Core/Src/main.c **** void Error_Handler(void)
 180:Core/Src/main.c **** {
 128              		.loc 1 180 1 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ Volatile: function does not return.
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 181:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 182:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 183:Core/Src/main.c ****   __disable_irq();
 134              		.loc 1 183 3 view .LVU27
 135              	.LBB6:
 136              	.LBI6:
 137              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
ARM GAS  /tmp/cc0AxhNB.s 			page 7


  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
ARM GAS  /tmp/cc0AxhNB.s 			page 8


  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc0AxhNB.s 			page 9


 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 138              		.loc 2 140 27 view .LVU28
 139              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 140              		.loc 2 142 3 view .LVU29
 141              		.syntax unified
 142              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 143 0000 72B6     		cpsid i
 144              	@ 0 "" 2
 145              		.thumb
 146              		.syntax unified
 147              	.L6:
 148              	.LBE7:
 149              	.LBE6:
 184:Core/Src/main.c ****   while (1)
 150              		.loc 1 184 3 discriminator 1 view .LVU30
 185:Core/Src/main.c ****   {
 186:Core/Src/main.c ****   }
 151              		.loc 1 186 3 discriminator 1 view .LVU31
 184:Core/Src/main.c ****   while (1)
 152              		.loc 1 184 9 discriminator 1 view .LVU32
 153 0002 FEE7     		b	.L6
 154              		.cfi_endproc
 155              	.LFE68:
 157              		.section	.text.SystemClock_Config,"ax",%progbits
 158              		.align	1
 159              		.global	SystemClock_Config
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu softvfp
 165              	SystemClock_Config:
 166              	.LFB66:
 112:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 167              		.loc 1 112 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 64
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171 0000 00B5     		push	{lr}
 172              	.LCFI3:
 173              		.cfi_def_cfa_offset 4
 174              		.cfi_offset 14, -4
 175 0002 91B0     		sub	sp, sp, #68
 176              	.LCFI4:
 177              		.cfi_def_cfa_offset 72
 113:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 178              		.loc 1 113 3 view .LVU34
 113:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 179              		.loc 1 113 22 is_stmt 0 view .LVU35
 180 0004 2822     		movs	r2, #40
 181 0006 0021     		movs	r1, #0
 182 0008 06A8     		add	r0, sp, #24
 183 000a FFF7FEFF 		bl	memset
 184              	.LVL2:
 114:Core/Src/main.c **** 
 185              		.loc 1 114 3 is_stmt 1 view .LVU36
ARM GAS  /tmp/cc0AxhNB.s 			page 10


 114:Core/Src/main.c **** 
 186              		.loc 1 114 22 is_stmt 0 view .LVU37
 187 000e 0023     		movs	r3, #0
 188 0010 0193     		str	r3, [sp, #4]
 189 0012 0293     		str	r3, [sp, #8]
 190 0014 0393     		str	r3, [sp, #12]
 191 0016 0493     		str	r3, [sp, #16]
 192 0018 0593     		str	r3, [sp, #20]
 119:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 193              		.loc 1 119 3 is_stmt 1 view .LVU38
 119:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 194              		.loc 1 119 36 is_stmt 0 view .LVU39
 195 001a 0122     		movs	r2, #1
 196 001c 0692     		str	r2, [sp, #24]
 120:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 197              		.loc 1 120 3 is_stmt 1 view .LVU40
 120:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 198              		.loc 1 120 30 is_stmt 0 view .LVU41
 199 001e 4FF48033 		mov	r3, #65536
 200 0022 0793     		str	r3, [sp, #28]
 121:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 201              		.loc 1 121 3 is_stmt 1 view .LVU42
 122:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 202              		.loc 1 122 3 view .LVU43
 122:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 203              		.loc 1 122 30 is_stmt 0 view .LVU44
 204 0024 0A92     		str	r2, [sp, #40]
 123:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 205              		.loc 1 123 3 is_stmt 1 view .LVU45
 123:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 206              		.loc 1 123 34 is_stmt 0 view .LVU46
 207 0026 0222     		movs	r2, #2
 208 0028 0D92     		str	r2, [sp, #52]
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 209              		.loc 1 124 3 is_stmt 1 view .LVU47
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 210              		.loc 1 124 35 is_stmt 0 view .LVU48
 211 002a 0E93     		str	r3, [sp, #56]
 125:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 212              		.loc 1 125 3 is_stmt 1 view .LVU49
 125:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 213              		.loc 1 125 32 is_stmt 0 view .LVU50
 214 002c 4FF4E013 		mov	r3, #1835008
 215 0030 0F93     		str	r3, [sp, #60]
 126:Core/Src/main.c ****   {
 216              		.loc 1 126 3 is_stmt 1 view .LVU51
 126:Core/Src/main.c ****   {
 217              		.loc 1 126 7 is_stmt 0 view .LVU52
 218 0032 06A8     		add	r0, sp, #24
 219 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 220              	.LVL3:
 126:Core/Src/main.c ****   {
 221              		.loc 1 126 6 view .LVU53
 222 0038 80B9     		cbnz	r0, .L11
 133:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 223              		.loc 1 133 3 is_stmt 1 view .LVU54
 133:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/cc0AxhNB.s 			page 11


 224              		.loc 1 133 31 is_stmt 0 view .LVU55
 225 003a 0F23     		movs	r3, #15
 226 003c 0193     		str	r3, [sp, #4]
 135:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 227              		.loc 1 135 3 is_stmt 1 view .LVU56
 135:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 228              		.loc 1 135 34 is_stmt 0 view .LVU57
 229 003e 0221     		movs	r1, #2
 230 0040 0291     		str	r1, [sp, #8]
 136:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 231              		.loc 1 136 3 is_stmt 1 view .LVU58
 136:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 232              		.loc 1 136 35 is_stmt 0 view .LVU59
 233 0042 0023     		movs	r3, #0
 234 0044 0393     		str	r3, [sp, #12]
 137:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 235              		.loc 1 137 3 is_stmt 1 view .LVU60
 137:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 236              		.loc 1 137 36 is_stmt 0 view .LVU61
 237 0046 4FF48062 		mov	r2, #1024
 238 004a 0492     		str	r2, [sp, #16]
 138:Core/Src/main.c **** 
 239              		.loc 1 138 3 is_stmt 1 view .LVU62
 138:Core/Src/main.c **** 
 240              		.loc 1 138 36 is_stmt 0 view .LVU63
 241 004c 0593     		str	r3, [sp, #20]
 140:Core/Src/main.c ****   {
 242              		.loc 1 140 3 is_stmt 1 view .LVU64
 140:Core/Src/main.c ****   {
 243              		.loc 1 140 7 is_stmt 0 view .LVU65
 244 004e 01A8     		add	r0, sp, #4
 245 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 246              	.LVL4:
 140:Core/Src/main.c ****   {
 247              		.loc 1 140 6 view .LVU66
 248 0054 20B9     		cbnz	r0, .L12
 144:Core/Src/main.c **** 
 249              		.loc 1 144 1 view .LVU67
 250 0056 11B0     		add	sp, sp, #68
 251              	.LCFI5:
 252              		.cfi_remember_state
 253              		.cfi_def_cfa_offset 4
 254              		@ sp needed
 255 0058 5DF804FB 		ldr	pc, [sp], #4
 256              	.L11:
 257              	.LCFI6:
 258              		.cfi_restore_state
 128:Core/Src/main.c ****   }
 259              		.loc 1 128 5 is_stmt 1 view .LVU68
 260 005c FFF7FEFF 		bl	Error_Handler
 261              	.LVL5:
 262              	.L12:
 142:Core/Src/main.c ****   }
 263              		.loc 1 142 5 view .LVU69
 264 0060 FFF7FEFF 		bl	Error_Handler
 265              	.LVL6:
 266              		.cfi_endproc
ARM GAS  /tmp/cc0AxhNB.s 			page 12


 267              	.LFE66:
 269              		.section	.text.main,"ax",%progbits
 270              		.align	1
 271              		.global	main
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 275              		.fpu softvfp
 277              	main:
 278              	.LFB65:
  64:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 279              		.loc 1 64 1 view -0
 280              		.cfi_startproc
 281              		@ Volatile: function does not return.
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284 0000 08B5     		push	{r3, lr}
 285              	.LCFI7:
 286              		.cfi_def_cfa_offset 8
 287              		.cfi_offset 3, -8
 288              		.cfi_offset 14, -4
  72:Core/Src/main.c **** 
 289              		.loc 1 72 3 view .LVU71
 290 0002 FFF7FEFF 		bl	HAL_Init
 291              	.LVL7:
  79:Core/Src/main.c **** 
 292              		.loc 1 79 3 view .LVU72
 293 0006 FFF7FEFF 		bl	SystemClock_Config
 294              	.LVL8:
  86:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 295              		.loc 1 86 3 view .LVU73
 296 000a FFF7FEFF 		bl	MX_GPIO_Init
 297              	.LVL9:
 298              	.L14:
  93:Core/Src/main.c ****   {
 299              		.loc 1 93 3 discriminator 1 view .LVU74
  98:Core/Src/main.c ****     HAL_Delay(500);
 300              		.loc 1 98 5 discriminator 1 view .LVU75
 301 000e 4FF40051 		mov	r1, #8192
 302 0012 0448     		ldr	r0, .L16
 303 0014 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 304              	.LVL10:
  99:Core/Src/main.c **** 
 305              		.loc 1 99 5 discriminator 1 view .LVU76
 306 0018 4FF4FA70 		mov	r0, #500
 307 001c FFF7FEFF 		bl	HAL_Delay
 308              	.LVL11:
  93:Core/Src/main.c ****   {
 309              		.loc 1 93 9 discriminator 1 view .LVU77
 310 0020 F5E7     		b	.L14
 311              	.L17:
 312 0022 00BF     		.align	2
 313              	.L16:
 314 0024 00100140 		.word	1073811456
 315              		.cfi_endproc
 316              	.LFE65:
 318              		.text
ARM GAS  /tmp/cc0AxhNB.s 			page 13


 319              	.Letext0:
 320              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 321              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 322              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 323              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 324              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 325              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 326              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 327              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 328              		.file 11 "<built-in>"
ARM GAS  /tmp/cc0AxhNB.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc0AxhNB.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc0AxhNB.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc0AxhNB.s:113    .text.MX_GPIO_Init:0000000000000060 $d
     /tmp/cc0AxhNB.s:119    .text.Error_Handler:0000000000000000 $t
     /tmp/cc0AxhNB.s:126    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc0AxhNB.s:158    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc0AxhNB.s:165    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc0AxhNB.s:270    .text.main:0000000000000000 $t
     /tmp/cc0AxhNB.s:277    .text.main:0000000000000000 main
     /tmp/cc0AxhNB.s:314    .text.main:0000000000000024 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
